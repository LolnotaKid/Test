local player = game.Players.LocalPlayer
local coreGui = game:GetService("CoreGui")
local tweenService = game:GetService("TweenService")
local userInputService = game:GetService("UserInputService")

-- Create loading screen GUI
local loadingGui = Instance.new("ScreenGui", coreGui)
loadingGui.Name = "LoadingGui"

local loadingText = Instance.new("TextLabel", loadingGui)
loadingText.Size = UDim2.new(0.4, 0, 0.1, 0)
loadingText.Position = UDim2.new(0.3, 0, 0.45, 0)
loadingText.BackgroundTransparency = 1
loadingText.Text = ""
loadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingText.TextScaled = true
loadingText.Font = Enum.Font.SourceSansBold

local authorText = Instance.new("TextLabel", loadingGui)
authorText.Size = UDim2.new(0.4, 0, 0.05, 0)
authorText.Position = UDim2.new(0.3, 0, 0.55, 0)
authorText.BackgroundTransparency = 1
authorText.Text = "Made by NotRealNull and Not14"
authorText.TextColor3 = Color3.fromRGB(255, 255, 255)
authorText.TextTransparency = 1
authorText.TextScaled = true
authorText.Font = Enum.Font.SourceSans

-- Create main GUI
local screenGui = Instance.new("ScreenGui", coreGui)
screenGui.Name = "MainGui"
screenGui.Enabled = false

local leftPanel = Instance.new("Frame", screenGui)
leftPanel.Size = UDim2.new(0.2, 0, 0.8, 0)
leftPanel.Position = UDim2.new(0.01, 0, 0.1, 0)
leftPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

local rightPanel = Instance.new("Frame", screenGui)
rightPanel.Size = UDim2.new(0.7, 0, 0.8, 0)
rightPanel.Position = UDim2.new(0.22, 0, 0.1, 0)
rightPanel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)

local titleLabel = Instance.new("TextLabel", rightPanel)
titleLabel.Size = UDim2.new(0.3, 0, 0.1, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Test Hub"
titleLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.SourceSans

local closeButton = Instance.new("TextButton", rightPanel)
closeButton.Size = UDim2.new(0.05, 0, 0.1, 0)
closeButton.Position = UDim2.new(0.95, 0, 0, 0)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)

local minimizeButton = Instance.new("TextButton", rightPanel)
minimizeButton.Size = UDim2.new(0.05, 0, 0.1, 0)
minimizeButton.Position = UDim2.new(0.9, 0, 0, 0)
minimizeButton.Text = "-"
minimizeButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)

local usernameFrame = Instance.new("Frame", rightPanel)
usernameFrame.Size = UDim2.new(0.25, 0, 0.1, 0) -- Adjusted size
usernameFrame.Position = UDim2.new(0, 0, 0.8, 0)
usernameFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

local profileImage = Instance.new("ImageLabel", usernameFrame)
profileImage.Size = UDim2.new(0.2, 0, 1, 0)
profileImage.Position = UDim2.new(0, 0, 0, 0)
profileImage.BackgroundTransparency = 1

local usernameLabel = Instance.new("TextLabel", usernameFrame)
usernameLabel.Size = UDim2.new(0.8, 0, 1, 0)
usernameLabel.Position = UDim2.new(0.2, 0, 0, 0)
usernameLabel.BackgroundTransparency = 1
usernameLabel.Text = player.Name
usernameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
usernameLabel.TextScaled = true

-- Function to set avatar image
local function setAvatarImage(userId, imageLabel)
    local thumbType = Enum.ThumbnailType.HeadShot
    local thumbSize = Enum.ThumbnailSize.Size420x420
    local content, isReady = game.Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)
    imageLabel.Image = content
end

setAvatarImage(player.UserId, profileImage)

-- Create the small icon GUI
local iconGui = Instance.new("ScreenGui", coreGui)
iconGui.Name = "IconGui"

local iconFrame = Instance.new("Frame", iconGui)
iconFrame.Size = UDim2.new(0.05, 0, 0.05, 0)
iconFrame.Position = UDim2.new(0.45, 0, 0.9, 0)
iconFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
iconFrame.BorderSizePixel = 2
iconFrame.BorderColor3 = Color3.fromRGB(128, 0, 128)

-- Hide the icon GUI initially
iconGui.Enabled = false

-- Function to make GUI draggable
local function makeDraggable(guiObject)
    local dragging
    local dragInput
    local dragStart
    local startPos
    local holdTime = 0.5
    local isHeld = false

    local function update(input)
        local delta = input.Position - dragStart
        guiObject.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    guiObject.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = guiObject.Position
            isHeld = false

            wait(holdTime)
            if dragging then
                isHeld = true
            end

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    guiObject.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    userInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

makeDraggable(iconFrame)

-- Toggle GUI visibility
closeButton.MouseButton1Click:Connect(function()
    screenGui.Enabled = false
    iconGui.Enabled = true
end)

iconFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        if not isHeld then
            screenGui.Enabled = true
            iconGui.Enabled = false
        end
    end
end)

-- Typing effect and fade out
coroutine.wrap(function()
    for i = 1, #("Pixel Forge") do
        loadingText.Text = string.sub("Pixel Forge", 1, i)
        wait(0.1)
    end
    wait(1)

    -- Fade in the author text
    tweenService:Create(authorText, TweenInfo.new(2), {TextTransparency = 0}):Play()

    wait(5)

    -- Fade out both texts
    local fadeOutLoadingText = tweenService:Create(loadingText, TweenInfo.new(2), {TextTransparency = 1})
    local fadeOutAuthorText = tweenService:Create(authorText, TweenInfo.new(2), {TextTransparency = 1})
    fadeOutLoadingText:Play()
    fadeOutAuthorText:Play()

    fadeOutLoadingText.Completed:Connect(function()
        loadingGui.Enabled = false
        screenGui.Enabled = true
    end)
end)()

-- Function to create a new section with a title
local function createSection(title, parent)
    local section = Instance.new("Frame", parent)
    section.Size = UDim2.new(1, 0, 0.2, 0) -- Adjust the size as needed
    section.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    section.Position = section.Position = UDim2.new(0, 0, parent:FindFirstChildOfClass("UIListLayout") and parent.UIListLayout:FindFirstChild("LayoutOrder").Value * 0.2 or 0, 0)
    
    local sectionTitle = Instance.new("TextLabel", section)
    sectionTitle.Size = UDim2.new(1, 0, 0.2, 0)
    sectionTitle.BackgroundTransparency = 1
    sectionTitle.Text = title
    sectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    sectionTitle.TextScaled = true
    sectionTitle.Font = Enum.Font.SourceSansBold
    
    return section
end

-- Add a section for Kill Options
local killOptionsSection = createSection("Kill Options", rightPanel)

-- Add a button to the Kill Options section
local killButton = Instance.new("TextButton", killOptionsSection)
killButton.Size = UDim2.new(0.8, 0, 0.3, 0)
killButton.Position = UDim2.new(0.1, 0, 0.4, 0)
killButton.Text = "Button"
killButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
killButton.TextColor3 = Color3.fromRGB(255, 255, 255)
killButton.TextScaled = true
killButton.Font = Enum.Font.SourceSans

-- Define what happens when the button is clicked
killButton.MouseButton1Click:Connect(function()
    print("Button Clicked")
end)
